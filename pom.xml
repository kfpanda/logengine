<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.zm.module</groupId>
	<artifactId>logengine</artifactId>
	<packaging>jar</packaging>
	<version>1.0.0</version>
	<name>logengine</name>
	<url>http://www.awifi.com.cn</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<aspectj.version>1.6.12</aspectj.version>
		<java.version>1.7</java.version>
		<slf4j.version>1.6.2</slf4j.version>
		<SVN_REVISION>1.0</SVN_REVISION>
		<spring.version>4.1.5.RELEASE</spring.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.8.5</version>
			<scope>test</scope>
		</dependency>
                
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-nosql</artifactId>
			<version>2.5</version>
		</dependency>

		<dependency>
		  <groupId>redis.clients</groupId>
		  <artifactId>jedis</artifactId>
		  <version>2.8.1</version>
		</dependency>
		
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.7</version>
		</dependency>

		<dependency>
			<groupId>xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.2.2</version>
		</dependency>
		
        <!-- mongodb -->
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
            <version>2.13.0</version>
        </dependency>
		
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.2.4</version>
		</dependency>
		
	</dependencies>

<profiles>
		<profile>
			<id>jenkins</id>
			<activation>
				<property>
					<name>BUILD_NUMBER</name>
				</property>
			</activation>
			<build>
				<finalName>${project.artifactId}-${project.version}-${BUILD_NUMBER}</finalName>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.1.1</version>
						<executions>
							<execution>
								<id>default-war</id>
								<phase>package</phase>
								<goals>
									<goal>war</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<archive>
								<manifestEntries>
									<Specification-Title>${project.name}</Specification-Title>
									<Specification-Version>${project.version}</Specification-Version>
									<Implementation-Version>jenkins-b${BUILD_NUMBER}-r${SVN_REVISION}</Implementation-Version>
								</manifestEntries>
							</archive>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

<build>
  	<pluginManagement>
  		<plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.5.3.201107060350</version>
            </plugin>
  			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<!--<encoding>${project.build.sourceEncoding}</encoding>-->
					<!-- <warName>hexin-info</warName>  -->
					<!-- 产生war前，用于存放构建war包的目录——target/ -->
					<webappDirectory>${basedir}/target/${project.artifactId}</webappDirectory>
					<!-- 防止lib 目录下的包 与mvn pom.xml定义的包同时打包 -->
					<!-- 表示忽略copy到target/warName目录中时忽略WEB-INF/lib/下的所有文件 -->
					<warSourceExcludes>WEB-INF/lib/**</warSourceExcludes>
					<!-- 表示忽略从target/artifact_id目录打成war包时忽略的目录或文件 -->
					<webXml>src/main/webapp/WEB-INF/web.xml</webXml>
					<warSourceDirectory>${basedir}/src/main/webapp</warSourceDirectory>
				</configuration>
			</plugin>
			
  		</plugins>
  	</pluginManagement>
  	
  	
  	<plugins>
  		<!-- 通过none的none版本来禁用AJDT，这样就会引入aspectJ依赖，这种应该是比较好的解决方案。  -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId> 
			<artifactId>maven-eclipse-plugin</artifactId>
			<version>2.8</version>
			<configuration>
				<ajdtVersion>none</ajdtVersion>
			</configuration> 
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>2.3.2</version>
			<configuration>
				<source>${java.version}</source>
				<target>${java.version}</target>
				<encoding>${project.build.sourceEncoding}</encoding>
				<compilerArguments>
					<extdirs>src\main\webapp\WEB-INF\lib</extdirs>
				</compilerArguments>
			</configuration>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-plugin</artifactId>
			<version>2.10</version>
			<configuration>
				<parallel>methods</parallel>  <!--方法级并发 -->
				<threadCount>10</threadCount>
				<argLine>-Dfile.encoding=UTF-8</argLine>
				<skip>true</skip><!-- 是否忽略测试 -->
				<!-- <testFailureIgnore>true</testFailureIgnore>忽略测试异常 -->
			</configuration>
		</plugin>
		
		<plugin>
			<groupId>org.apache.tomcat.maven</groupId>
			<artifactId>tomcat7-maven-plugin</artifactId>
			<version>2.2</version>
			<configuration>
           		<path>/awifi-pay</path>
           	</configuration>
		</plugin>
  	</plugins>
  	
  	<resources>
		<resource>
			<directory>src/main/java</directory>
			<includes>
				<include>**/*.xml</include>
				<include>**/*.properties</include>
			</includes>
		</resource>
		<resource>
			<directory>src/main/resources</directory>
			<includes>
				<include>**/*.xml</include>
				<include>**/*.dtd</include>
				<include>**/*.js</include>
				<include>**/*.properties</include>
			</includes>
		</resource>
	</resources>
	<sourceDirectory>src/main/java</sourceDirectory>
	<testResources>
		<testResource>
			<directory>src/main/resources</directory>
			<includes>
				<include>**/*.xml</include>
				<include>**/*.dtd</include>
				<include>**/*.js</include>
				<include>**/*.properties</include>
			</includes>
		</testResource>
		<testResource>
			<directory>src/test/resources</directory>
			<includes>
				<include>**/*.xml</include>
				<include>**/*.properties</include>
			</includes>
		</testResource>
	</testResources>
	<testSourceDirectory>src/test/java</testSourceDirectory>
	<!--<scriptSourceDirectory>src/main/scripts</scriptSourceDirectory>-->

	<finalName>${project.artifactId}</finalName>
</build>

<reporting>
	<outputDirectory>${basedir}/target/site</outputDirectory>
	<plugins>
		<plugin>
			<artifactId>maven-project-info-reports-plugin</artifactId>
			<version>2.0.1</version>
			<reportSets>
				<reportSet>
					<id>sunlink</id>
					<reports>
						<report>javadoc</report>
					</reports>
					<inherited>true</inherited>
					<configuration>
						<links>
							<link>http://java.sun.com/j2se/1.5.0/docs/api/</link>
						</links>
					</configuration>
				</reportSet>
			</reportSets>
		</plugin>
	</plugins>
</reporting>

</project>
